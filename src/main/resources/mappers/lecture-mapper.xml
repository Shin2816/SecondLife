<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="lectureMapper">
	<resultMap id="lecture" type="com.green.SecondLife.lecture.vo.LectureVO">
        <id column="LECTURE_CODE"           property="lectureCode"/>
        <result column="LECTURE_TITLE"      property="lectureTitle"/>
        <result column="LECTURE_SUBJECT"    property="lectureSubject"/>
        <result column="LECTURE_STUDENT"    property="lectureStudent"/>
        <result column="LECTURE_PERIOD"     property="lecturePeriod"/>
        <result column="LECTURE_PRICE"      property="lecturePrice"/>
        <result column="INSTRUCTOR_CODE"    property="instructorCode"/>
        <result column="INSTRUCTOR_NAME"    property="instructorName"/>
    </resultMap>
    <!-- 수강생 테이블 -->
    <resultMap id="student" type="com.green.SecondLife.lecture.vo.StudentVO">
        <id column="STUDENT_CODE"           property="studentCode"/>
        <result column="MEMBER_ID"          property="memberId"/>
        <result column="LECTURE_CODE"       property="lectureCode"/>
    </resultMap>
    <!-- 강사 리뷰 테이블 -->
    <resultMap id="lectureReview" type="com.green.SecondLife.lecture.vo.LectureReviewVO">
        <id column="LECTURE_REVIEW_CODE"         property="lectureReviewCode"/>
        <result column="LECTURE_CODE"            property="lectureCode"/>
        <result column="INSTRUCTOR_CODE"         property="instructorCode"/>
        <result column="STUDENT_CODE"            property="studentCode"/>
        <result column="LECTURE_STAR_POINT"      property="lectureStarPoint"/>
        <result column="LECTURE_REVIEW_CONTENT"  property="lectureReviewContent"/>
        <result column="LECTURE_REVIEW_DATE"     property="lectureReviewDate"/>
    </resultMap>
    <!-- 강좌 등록 쿼리 -->
    <insert id="insertLecture">
        INSERT INTO LECTURE (
            LECTURE_CODE
            , LECTURE_TITLE
            , LECTURE_SUBJECT
            , LECTURE_STUDENT
            , LECTURE_PERIOD
            , LECTURE_PRICE
            , INSTRUCTOR_CODE
        ) VALUES (
            (SELECT 'LECTURE_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LECTURE_CODE, 9))), 0) + 1, 3,'0')
            FROM LECTURE)
            , #{lectureTitle}
            , #{lectureSubject}
            , #{lectureStudent}
            , #{lecturePeriod}
            , #{lecturePrice}
            , #{instructorCode}
        )
    </insert>
    <!-- 강좌 목록 조회 쿼리-->
    <select id="selectLectureList" resultMap="lecture">
        SELECT LECTURE_CODE
            , LECTURE_TITLE
            , LECTURE_SUBJECT
            , LECTURE_STUDENT
            , LECTURE_PERIOD
            , LECTURE_PRICE
            , L.INSTRUCTOR_CODE
            , INSTRUCTOR_NAME
        FROM LECTURE L, INSTRUCTOR I
        WHERE L.INSTRUCTOR_CODE = I.INSTRUCTOR_CODE
        <if test="instructorCode != null">
            AND L.INSTRUCTOR_CODE = #{instructorCode}
        </if>
    </select>
    <!-- 강좌 상세 정보 조회 쿼리-->
    <select id="selectLectureDetail" resultMap="lecture">
        SELECT LECTURE_CODE
            , LECTURE_TITLE
            , LECTURE_SUBJECT
            , LECTURE_STUDENT
            , LECTURE_PERIOD
            , LECTURE_PRICE
            , L.INSTRUCTOR_CODE
            , INSTRUCTOR_NAME
        FROM LECTURE L, INSTRUCTOR I
        WHERE LECTURE_CODE = #{lectureCode}
        AND L.INSTRUCTOR_CODE = I.INSTRUCTOR_CODE
    </select>
    <!-- 강좌 삭제 기능-->
    <delete id="deleteLecture">
        DELETE LECTURE
        WHERE LECTURE_CODE = #{lectureCode}
    </delete>
    <!-- 강좌 수강신청 -->
    <insert id="insertStudent">
        INSERT INTO STUDENT (
            STUDENT_CODE
            , MEMBER_ID
            , LECTURE_CODE
        ) VALUES (
            (SELECT 'STUDENT_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(STUDENT_CODE, 9))), 0) + 1, 3,'0')
            FROM STUDENT)
            , #{memberId}
            , #{lectureCode}
        )
    </insert>
    <!-- 수강생 목록 조회 -->
    <select id="selectStudentList" resultMap="student">
        SELECT STUDENT_CODE
            , MEMBER_ID
            , LECTURE_CODE
        FROM STUDENT
        WHERE LECTURE_CODE = #{lectureCode}
    </select>
    <!-- 리뷰 작성을 하려는 학생 정보 조회 -->
    <select id="selectTheStudent" resultMap="student">
        SELECT STUDENT_CODE
            , MEMBER_ID
            , LECTURE_CODE
        FROM STUDENT
        WHERE LECTURE_CODE = #{lectureCode}
        AND MEMBER_ID = #{memberId}
    </select>
    <!-- 수강생 삭제 기능 -->
    <delete id="deleteStudent">
        DELETE STUDENT
        WHERE STUDENT_CODE = #{studentCode}
    </delete>
    <!--메인페이지 강좌 목록-->
    <select id="selectMainLectureList" resultMap="lecture">
        SELECT ROWNUM
            , LECTURE_CODE
            , LECTURE_TITLE
            , LECTURE_SUBJECT
            , LECTURE_STUDENT
            , LECTURE_PERIOD
            , LECTURE_PRICE
        FROM (
            SELECT ROWNUM AS ROW_NUM
                , LECTURE_CODE
                , LECTURE_TITLE
                , LECTURE_SUBJECT
                , LECTURE_STUDENT
                , LECTURE_PERIOD
                , LECTURE_PRICE
            FROM (
                SELECT *
                FROM LECTURE
                ORDER BY LECTURE_CODE DESC
            )
        )
        WHERE ROWNUM &lt;= 5
    </select>
    <!-- 강좌 리뷰 등록 기능 -->
    <insert id="insertLectureReview">
        INSERT INTO LECTURE_REVIEW (
            LECTURE_REVIEW_CODE
            , LECTURE_CODE
            , INSTRUCTOR_CODE
            , STUDENT_CODE
            , LECTURE_STAR_POINT
            , LECTURE_REVIEW_CONTENT
        ) VALUES (
            (SELECT #{lectureCode}||'_REVIEW_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(LECTURE_REVIEW_CODE, 20))), 0) + 1, 3,'0')
            FROM LECTURE_REVIEW)
            , #{lectureCode}
            , #{instructorCode}
            , #{studentCode}
            , #{lectureStarPoint}
            , #{lectureReviewContent}
        )
    </insert>
    <!-- 강좌 리뷰 목록 조회 -->
    <select id="selectLectureReviewList" resultMap="lectureReview">
        SELECT LECTURE_REVIEW_CODE
            , LECTURE_CODE
            , INSTRUCTOR_CODE
            , LECTURE_STAR_POINT
            , LECTURE_REVIEW_CONTENT
            , TO_CHAR (LECTURE_REVIEW_DATE, 'YYYY-MM-DD') LECTURE_REVIEW_DATE
        FROM LECTURE_REVIEW
        WHERE INSTRUCTOR_CODE = #{instructorCode}
    </select>

</mapper>































