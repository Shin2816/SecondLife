<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 해당 파일에 모든 쿼리문을 작성 -->
<mapper namespace="qaMapper">
    <!--Q&A 게시판 목록-->
    <resultMap id="qaList" type="com.green.SecondLife.community.vo.BoardQaListVO">
        <id column="QA_BOARD_NUM" property="qaBoardNum"/>
        <result column="QA_BOARD_TITLE" property="qaBoardTitle"/>
        <result column="QA_BOARD_CONTENT" property="qaBoardContent"/>
        <result column="QA_BOARD_WRITER" property="qaBoardWriter"/>
        <result column="QA_CREATE_DATE" property="qaCreateDate"/>
        <result column="QA_BOARD_READ_CNT" property="qaBoardReadCnt"/>
        <result column="QA_BOARD_ISCLOSE" property="qaBoardIsClose"/>
        <result column="QA_BOARD_PASSWORD" property="qaBoardPassword"/>
        <collection property="qaBoardComment" resultMap="comment"/><!--comment를 여러개 가지기 위해서-->
        <collection property="qaImgList" resultMap="qaImg"/><!--어소시에이션은 하나만, 컬렉션은 다수-->
    </resultMap>
    <!-- QA 이미지 -->
    <resultMap id="qaImg" type="com.green.SecondLife.community.vo.QaImgVO">
        <id column="QA_CODE" property="qaCode"/>
        <result column="QA_ORIGIN_FILE_NAME" property="qaOriginFileName"/>
        <result column="QA_ATTACHED_FILE_NAME" property="qaAttachedFileName"/>
        <result column="QA_BOARD_NUM" property="qaBoardNum"/>
    </resultMap>
    <!--QA게시판 댓글 목록-->
    <resultMap id="comment" type="com.green.SecondLife.community.vo.BoardCommentListVO">
        <id column="COMMENT_ID" property="commentId"/>
        <result column="COMMENT_CONTENT" property="commentContent"/>
        <result column="COMMENT_WRITER" property="commentWriter"/>
        <result column="COMMENT_CREATE_DATE" property="commentCreateDate"/>
        <result column="COMMENT_NUM" property="commentNum"/>
    </resultMap>
    <!--Q&A 게시판 목록 조회-->
    <select id="selectQaBoardList" resultMap="qaList">
        SELECT QA_BOARD_NUM
            , QA_BOARD_TITLE
            , QA_BOARD_WRITER
            , TO_CHAR(QA_CREATE_DATE, 'YYYY-MM-DD') QA_CREATE_DATE
            , QA_BOARD_READ_CNT
            , QA_BOARD_PASSWORD
        FROM BOARD_QA_LIST
        <if test='searchValue != null and !searchValue.equals("")'>
            WHERE UPPER(${searchType}) LIKE '%'||UPPER(#{searchValue})||'%'
        </if>
        ORDER BY QA_CREATE_DATE DESC
        OFFSET (#{nowPage} - 1) * #{displayDataCnt} ROWS FETCH FIRST #{displayDataCnt} ROWS ONLY
    </select>
    <!--게시글 갯수 조회-->
    <select id="selectBoardCnt" resultType="int">
        SELECT COUNT(QA_BOARD_NUM)
        FROM BOARD_QA_LIST
    </select>
    <!--Q&A 게시판 글 등록(비공개)-->
    <insert id="insertQaBoardClose">
        INSERT INTO BOARD_QA_LIST(
            QA_BOARD_NUM
            , QA_BOARD_TITLE
            , QA_BOARD_CONTENT
            , QA_BOARD_WRITER
            , QA_BOARD_PASSWORD
        ) VALUES(
            #{qaBoardNum}
            , #{qaBoardTitle}
            , #{qaBoardContent}
            , #{qaBoardWriter}
            , #{qaBoardPassword}
        )
    </insert>
    <!--Q&A 게시판 글 등록(공개)-->
    <insert id="insertQaBoardOpen">
        INSERT INTO BOARD_QA_LIST(
            QA_BOARD_NUM
            , QA_BOARD_TITLE
            , QA_BOARD_CONTENT
            , QA_BOARD_WRITER
        ) VALUES(
            #{qaBoardNum}
            , #{qaBoardTitle}
            , #{qaBoardContent}
            , #{qaBoardWriter}
        )
    </insert>
    <!--메인페이지 Q&A게시판 목록 조회-->
    <select id="selectMainQaBoardList" resultMap="qaList">
        SELECT ROW_NUM
            , QA_BOARD_NUM
            , QA_BOARD_TITLE
            , QA_BOARD_WRITER
            , TO_CHAR(QA_CREATE_DATE, 'YYYY-MM-DD') QA_CREATE_DATE
            , QA_BOARD_READ_CNT
        FROM (
        SELECT ROWNUM AS ROW_NUM
            , QA_BOARD_NUM
            , QA_BOARD_TITLE
            , QA_BOARD_WRITER
            , QA_CREATE_DATE
            , QA_BOARD_READ_CNT
        FROM (
        SELECT *
        FROM BOARD_QA_LIST
        ORDER BY QA_CREATE_DATE DESC
        )
        )
        WHERE ROWNUM &lt;= 5
    </select>
    <!--Q&A게시판 상세 조회(JOIN)-->
    <select id="selectQaBoardDetail" resultMap="qaList">
        SELECT LIST.QA_BOARD_NUM
        , QA_BOARD_TITLE
        , QA_BOARD_CONTENT
        , QA_BOARD_WRITER
        , TO_CHAR(QA_CREATE_DATE, 'YYYY-MM-DD') QA_CREATE_DATE
        , QA_BOARD_READ_CNT
        , IMG.QA_ATTACHED_FILE_NAME
        , IMG.QA_ORIGIN_FILE_NAME
        FROM BOARD_QA_LIST LIST, QA_IMG IMG
        WHERE LIST.QA_BOARD_NUM = IMG.QA_BOARD_NUM(+)
        AND LIST.QA_BOARD_NUM = #{qaBoardNum}
    </select>
    <!--클릭하면 조회수 1 증가-->
    <update id="updateQaBoardCnt">
        UPDATE BOARD_QA_LIST
        SET
        QA_BOARD_READ_CNT = QA_BOARD_READ_CNT + 1
        WHERE QA_BOARD_NUM = #{qaBoardNum}
    </update>
    <!--QA게시판 댓글 조회-->
    <select id="selectQaBoardComment" resultMap="comment">
        SELECT COMMENT_ID
            , COMMENT_CONTENT
            , COMMENT_WRITER
            , TO_CHAR(COMMENT_CREATE_DATE, 'YYYY.MM.DD. HH24:MI') COMMENT_CREATE_DATE
        FROM BOARD_QA_COMMENTS
        WHERE COMMENT_NUM = #{qaBoardNum}
        ORDER BY COMMENT_CREATE_DATE DESC
    </select>
    <!--QA게시판 댓글 작성-->
    <insert id="insertQaBoardComment">
        INSERT INTO BOARD_QA_COMMENTS (
            COMMENT_ID
            , COMMENT_CONTENT
            , COMMENT_WRITER
            , COMMENT_CREATE_DATE
            , COMMENT_NUM
        ) VALUES (
        (SELECT NVL(MAX(COMMENT_ID), 0) + 1 FROM BOARD_QA_COMMENTS)
            , #{commentContent}
            , #{commentWriter}
            , SYSDATE
            , #{commentNum}
        )
    </insert>
    <!--QA게시판 글 삭제, 댓글이 먼저 삭제되고 게시글 삭제 되도록(외래키 오류에 대응)-->
    <delete id="deleteQaBoard">
        DELETE BOARD_QA_LIST
        WHERE QA_BOARD_NUM = #{qaBoardNum}
    </delete>
    <!--QA게시판 글 수정-->
    <update id="updateQaBoard">
        UPDATE BOARD_QA_LIST
        SET
        QA_BOARD_TITLE = #{qaBoardTitle}
        , QA_BOARD_CONTENT = #{qaBoardContent}
        WHERE QA_BOARD_NUM = #{qaBoardNum}
    </update>
    <!--QA게시판 댓글 삭제-->
    <delete id="deleteQaBoardComment">
        DELETE BOARD_QA_COMMENTS
        WHERE COMMENT_ID = #{commentId}
    </delete>
    <!--Q&A 게시판 댓글 수정-->
    <update id="updateQaBoardComment">
        UPDATE BOARD_QA_COMMENTS
        SET
        COMMENT_CONTENT = #{commentContent}
        WHERE COMMENT_ID = #{commentId}
    </update>
    <!--다음 qaBoardNum 조회-->
    <select id="selectNextQaBoardNum" resultType="int">
        SELECT NVL(MAX(QA_BOARD_NUM), 0) + 1 FROM BOARD_QA_LIST
    </select>
    <!--이미지 등록-->
    <insert id="insertQaImgs">
        INSERT INTO QA_IMG (
            QA_CODE
            , QA_ORIGIN_FILE_NAME
            , QA_ATTACHED_FILE_NAME
            , QA_BOARD_NUM
        )
        <foreach collection="qaImgList" item="img" separator="UNION ALL" index="idx">
            SELECT (SELECT 'QA_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(QA_CODE, 4))), 0) + 1 + #{idx}, 3, '0') FROM QA_IMG)
                , #{img.qaOriginFileName}
                , #{img.qaAttachedFileName}
                , #{img.qaBoardNum}
            FROM DUAL
        </foreach>
    </insert>
    <!--qaBoardNum이 같은 비밀번호 조회-->
    <select id="selectQaPw" resultType="String">
        SELECT QA_BOARD_PASSWORD
        FROM BOARD_QA_LIST
        WHERE QA_BOARD_NUM = #{qaBoardNum}
    </select>
</mapper>































